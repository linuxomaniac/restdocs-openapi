buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        // Add the plugin to Gradle dependencies
        classpath 'cc.dille.restdocs:restdocs-openapi-plugin-gradle:0.1.0'
    }
}

plugins {
    id "java"
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id 'org.springframework.boot' version '2.0.4.RELEASE'
}

// Apply here the plugin
apply plugin: "cc.dille.restdocs-openapi"

repositories {
    // The mavenLocal() repository is used to fetch all the libs published with the publishToMavenLocal goal.
    // That helps to deal easily with dependencies between jars and not copying them everywhere.
    mavenLocal()
    jcenter()
    // Add this for some dependencies
    maven { url 'https://jitpack.io' }
}

group = "cc.dille"
version = "0.1.0"
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web:2.0.4.RELEASE")
    implementation('org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE')
    implementation('org.springframework:spring-web:5.0.8.RELEASE')
    implementation('org.springframework.restdocs:spring-restdocs-mockmvc:2.0.2.RELEASE')
    implementation('org.springframework.hateoas:spring-hateoas:0.25.0.RELEASE')
    compileOnly('org.projectlombok:lombok:1.16.18')

    testImplementation('org.springframework.boot:spring-boot-starter-test:2.0.4.RELEASE')
    testImplementation('org.springframework.boot:spring-boot-test:2.0.4.RELEASE')
    testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc:2.0.2.RELEASE')

    // Add the dependency to the lib only for the compilation of the tests classes
    testImplementation('cc.dille.restdocs:restdocs-openapi:0.1.0')
    //implementation('com.github.everit-org.json-schema:org.everit.json.schema:1.9.1')
}

// This is the task for aggregating the fragments.
// The values below will fill the OpenAPI YAML file; most of them are not mandatory.
openapidoc {
    openAPIVersion = "3.0.1"

    // Fill with the project version
    infoVersion = version
    infoTitle = "Dummy Note API"
    infoDescription = "API to create or delete notes - Generated with Gradle"

    infoContactName = "test"
    infoContactEmail = "test@example.org"
    infoContactUrl = "http://perdu.com"

    serverUrl = "http://localhost:8080"
    serverDescription = "Testing environment"

    outputDirectory = "openAPIDoc"
    snippetsDirectory = "generated-snippets"
    outputFileNamePrefix ="api"
}

// Call the plugin after the test task is successful
test.finalizedBy('openapidoc')
