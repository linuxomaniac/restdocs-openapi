buildscript {
    ext.mavenVersion = "3.5.4"
    dependencies {
        classpath group: "com.liferay", name: "com.liferay.gradle.plugins.maven.plugin.builder", version: "1.2.0"
    }

    repositories {
        mavenLocal()
        maven {
            url "https://repository-cdn.liferay.com/nexus/content/groups/public"
        }
    }
}

plugins {
    id "maven"
}

apply plugin: "com.liferay.maven.plugin.builder"

configurations {
    mavenEmbedder
}

version = '0.1.0'
description = 'Restdocs OpenAPI fragments aggregation plugin for Maven'

repositories {
    mavenLocal()
    jcenter()
}

// Write the plugin's classpath to a file to share with the tests
task createClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}

dependencies {
    implementation("org.apache.maven:maven-plugin-api:$mavenVersion")

    implementation('cc.dille.restdocs:restdocs-openapi-plugin-common:0.1.0')
    implementation("org.apache.maven.plugin-tools:maven-plugin-annotations:3.5.2")

    mavenEmbedder("org.apache.maven:maven-compat:$mavenVersion")
    mavenEmbedder("org.apache.maven:maven-embedder:$mavenVersion")
    mavenEmbedder('org.slf4j:slf4j-simple:1.7.25')
    mavenEmbedder('org.eclipse.aether:aether-connector-basic:1.1.0')
    mavenEmbedder('org.eclipse.aether:aether-transport-wagon:1.1.0')
    mavenEmbedder('org.apache.maven.wagon:wagon-http:3.1.0:shaded')
    mavenEmbedder('org.apache.maven.wagon:wagon-provider-api:3.1.0')

    testImplementation("org.amshove.kluent:kluent:1.40")
    testImplementation("org.apache.maven.shared:maven-verifier:1.6")
    testImplementation(files(createClasspathManifest))
}

buildPluginDescriptor {
    classesDir = "$buildDir/classes/kotlin"
    sourceDir = "src/main/kotlin"
    goalPrefix = ""

    pomArtifactId = project.name
    pomVersion = project.version
    pomGroupId = project.group
}

project.jar.dependsOn(buildPluginDescriptor)
