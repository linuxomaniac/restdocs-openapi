

apply plugin: 'java-gradle-plugin'
apply plugin: 'kotlin'
apply plugin: "org.jetbrains.kotlin.jvm"
apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'

repositories {
    maven { url "https://plugins.gradle.org/m2/" }
    mavenLocal()
    jcenter()
}

group = 'cc.dille'

dependencies {
    compile gradleApi()
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.31")
    implementation("org.jetbrains.kotlin:kotlin-reflect:1.2.31")
    implementation("org.yaml:snakeyaml:1.20")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.9.5")


    testImplementation gradleTestKit()
    testImplementation("org.amshove.kluent:kluent:1.35")
    testImplementation("com.nhaarman:mockito-kotlin:1.5.0")
    testImplementation("com.jayway.jsonpath:json-path:2.4.0")
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

// Write the plugin's classpath to a file to share with the tests
task createClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}

// Add the classpath file to the test runtime classpath
dependencies {
    testRuntime files(createClasspathManifest)
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.6'
}
buildscript {
    ext.kotlin_version = '1.2.51'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
